# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: GoRelease

on:
  push:
    tags: "*"

jobs:

  build_arm64:
    runs-on: ubuntu-latest
    env:
        BIN_NAME: ncglpm_arm64
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build ARM64
      run: env GOOS=linux GOARCH=arm64 go build -v -o $BIN_NAME

    - name: Test
      run: go test -v ./...

    - name: Zip
      run: zip $BIN_NAME

    - name: version
      run: echo "::set-output name=version::$(./$(BIN_NAME) --version)"
      id: version

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $(BIN_NAME).zip
        asset_name: $(BIN_NAME).zip
        asset_content_type: application/zip

  build_amd64:
    runs-on: ubuntu-latest
    env:
        BIN_NAME: ncglpm_amd64
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build AMD64
      run: env GOOS=linux GOARCH=amd64 go build -v -o $BIN_NAME

    - name: Test
      run: go test -v ./...

    - name: Zip
      run: zip $BIN_NAME

    - name: version
      run: echo "::set-output name=version::$(./$(BIN_NAME) --version)"
      id: version

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $(BIN_NAME).zip
        asset_name: $(BIN_NAME).zip
        asset_content_type: application/zip

